name: GitHub Actions CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_CHANGE_ARCH_TO_ARM: 1
  HOMEBREW_RELOCATE_RPATHS: 1

concurrency:
  group: "tests-${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  tests:
    if: ${{github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    defaults:
      run:
        shell: /bin/bash -e {0}
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Set environment variables
        run: |
          if [ "$RUNNER_OS" = 'macOS' ]; then
            echo 'PATH=/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin' >> $GITHUB_ENV
            echo 'GITHUB_ACTIONS_HOMEBREW_MACOS_SELF_HOSTED=1' >> $GITHUB_ENV
          else
            # No PATH needed on Linux as set by Docker
            echo 'HOMEBREW_FORCE_HOMEBREW_ON_LINUX=1' >> $GITHUB_ENV
          fi

      - name: Set up Linux Homebrew Docker container
        if: runner.os == 'Linux'
        env:
          TAP_PATH: /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-core
        run: |
          docker run \
            --detach \
            --user linuxbrew \
            --name ${{github.sha}} \
            --env-file <(env | egrep 'HOMEBREW|GITHUB') \
            --workdir /tmp/bottles \
            --pull always \
            ghcr.io/homebrew/ubuntu16.04:master \
            sleep inf
          # Fix working directory permissions
          docker exec --user root ${{github.sha}} chmod 777 /tmp/bottles

          docker exec --workdir "$TAP_PATH" ${{github.sha}} git remote set-url origin ${{github.event.repository.html_url}}
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git fetch origin ${{github.sha}} '+refs/heads/*:refs/remotes/origin/*'
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git remote set-head origin --auto
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git checkout --force -B master FETCH_HEAD

      - name: Set up Homebrew
        id: set-up-homebrew
        if: runner.os == 'macOS'
        uses: Homebrew/actions/setup-homebrew@master

      - if: runner.os == 'macOS'
        run: brew test-bot --only-cleanup-before

      - name: Run brew test-bot --only-setup
        run: |
          if [ "$RUNNER_OS" = 'macOS' ]; then
            brew test-bot --only-setup
          else
            docker exec ${{github.sha}} brew test-bot --only-setup
          fi

      - name: Run brew test-bot formulae
        id: brew-test-bot-formulae
        run: |
          if [ "$RUNNER_OS" = 'macOS' ]; then
            mkdir bottles
            cd bottles
            brew test-bot --only-formulae --junit --only-json-tab --skip-dependents --testing-formulae=bazel
          else
            docker exec ${{github.sha}} brew test-bot --only-formulae --junit --only-json-tab --skip-dependents --testing-formulae=bazel
          fi

      - name: Copy results from container
        if: always() && runner.os == 'Linux'
        run: docker cp ${{github.sha}}:/tmp/bottles .

      - name: Failures summary for brew test-bot formulae
        if: always()
        run: |
          touch bottles/steps_output.txt
          cat bottles/steps_output.txt
          rm bottles/steps_output.txt

      - name: Copy results from container
        if: always() && runner.os == 'Linux'
        run: docker cp ${{github.sha}}:/tmp/bottles .

      - name: Output brew bottle result
        if: always()
        run: |
          cat bottles/bottle_output.txt
          rm bottles/bottle_output.txt

      - name: Delete logs and home
        if: always()
        run: |
          rm -rvf bottles/logs
          rm -rvf bottles/home

      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd bottles
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"
          failures=$(ls failed/*.json | wc -l | xargs echo -n)
          echo "$failures failed bottles"
          echo "::set-output name=failures::$failures"

      - name: Post cleanup
        if: always()
        run: |
          if [ "$RUNNER_OS" = 'Linux' ]; then
            docker rm -f ${{github.sha}}
          else
            brew test-bot --only-cleanup-after
          fi
          rm -rvf bottles
